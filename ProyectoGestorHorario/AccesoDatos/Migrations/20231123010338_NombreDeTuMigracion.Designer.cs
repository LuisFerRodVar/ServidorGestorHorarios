// <auto-generated />
using System;
using AccesoDatos.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace AccesoDatos.Migrations
{
    [DbContext(typeof(SistemaContext))]
    [Migration("20231123010338_NombreDeTuMigracion")]
    partial class NombreDeTuMigracion
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.13")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("AccesoDatos.Models.Actividad", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Dia")
                        .HasColumnType("int")
                        .HasColumnName("dia");

                    b.Property<int>("Espacio")
                        .HasColumnType("int")
                        .HasColumnName("espacio");

                    b.Property<int>("HoraEntrada")
                        .HasColumnType("int")
                        .HasColumnName("horaEntrada");

                    b.Property<int>("HoraSalida")
                        .HasColumnType("int")
                        .HasColumnName("horaSalida");

                    b.Property<string>("IdEncargado")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("idEncargado");

                    b.HasKey("Id")
                        .HasName("PK__Activida__3213E83FB031BF40");

                    b.HasIndex("Espacio");

                    b.HasIndex("IdEncargado");

                    b.ToTable("Actividad", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.Administrador", b =>
                {
                    b.Property<string>("Correo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("correo");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("contrasenia");

                    b.HasKey("Correo")
                        .HasName("PK__Administ__2A586E0A9284BBFA");

                    b.ToTable("Administrador", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.Curso", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("id");

                    b.Property<string>("Carrera")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("carrera");

                    b.Property<int>("Ciclo")
                        .HasColumnType("int")
                        .HasColumnName("ciclo");

                    b.Property<string>("Nombre")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__Curso__3213E83F5FDDD93B");

                    b.ToTable("Curso", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.Espacio", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int")
                        .HasColumnName("id");

                    b.Property<int>("Capacidad")
                        .HasColumnType("int")
                        .HasColumnName("capacidad");

                    b.Property<string>("Descripcion")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("descripcion");

                    b.HasKey("Id")
                        .HasName("PK__Espacio__3213E83FB30BA208");

                    b.ToTable("Espacio", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.HorarioAsignado", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("Dia")
                        .HasColumnType("int")
                        .HasColumnName("dia");

                    b.Property<int>("Espacio")
                        .HasColumnType("int")
                        .HasColumnName("espacio");

                    b.Property<int>("HoraEntrada")
                        .HasColumnType("int")
                        .HasColumnName("horaEntrada");

                    b.Property<int>("HoraSalida")
                        .HasColumnType("int")
                        .HasColumnName("horaSalida");

                    b.Property<int>("IdGrupo")
                        .HasColumnType("int")
                        .HasColumnName("idGrupo");

                    b.HasKey("Id");

                    b.HasIndex("Espacio");

                    b.HasIndex("IdGrupo");

                    b.ToTable("HorarioAsignado", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.Profesor", b =>
                {
                    b.Property<string>("Id")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("id");

                    b.Property<string>("Apellidos")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("apellidos");

                    b.Property<string>("Contrasenia")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("contrasenia");

                    b.Property<string>("Correo")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)")
                        .HasColumnName("correo");

                    b.Property<string>("Nombre")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("nombre");

                    b.HasKey("Id")
                        .HasName("PK__Profesor__3213E83F7F39497D");

                    b.ToTable("Profesor", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.ProfesorCurso", b =>
                {
                    b.Property<int?>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int?>("Id"));

                    b.Property<int>("Grupo")
                        .HasColumnType("int")
                        .HasColumnName("grupo");

                    b.Property<string>("IdCurso")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("idCurso");

                    b.Property<string>("IdProfesor")
                        .IsRequired()
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)")
                        .HasColumnName("idProfesor");

                    b.HasKey("Id")
                        .HasName("PK__Profesor__3213E83F9F908F70");

                    b.HasIndex("IdCurso");

                    b.HasIndex("IdProfesor");

                    b.ToTable("ProfesorCurso", (string)null);
                });

            modelBuilder.Entity("AccesoDatos.Models.Actividad", b =>
                {
                    b.HasOne("AccesoDatos.Models.Espacio", "EspacioNavigation")
                        .WithMany("Actividads")
                        .HasForeignKey("Espacio")
                        .IsRequired()
                        .HasConstraintName("FK__Actividad__espac__5629CD9C");

                    b.HasOne("AccesoDatos.Models.Profesor", "IdEncargadoNavigation")
                        .WithMany("Actividads")
                        .HasForeignKey("IdEncargado")
                        .IsRequired()
                        .HasConstraintName("FK__Actividad__idEnc__5535A963");

                    b.Navigation("EspacioNavigation");

                    b.Navigation("IdEncargadoNavigation");
                });

            modelBuilder.Entity("AccesoDatos.Models.HorarioAsignado", b =>
                {
                    b.HasOne("AccesoDatos.Models.Espacio", "EspacioNavigation")
                        .WithMany()
                        .HasForeignKey("Espacio")
                        .IsRequired()
                        .HasConstraintName("FK__HorarioAs__espac__628FA481");

                    b.HasOne("AccesoDatos.Models.ProfesorCurso", "IdGrupoNavigation")
                        .WithMany()
                        .HasForeignKey("IdGrupo")
                        .IsRequired()
                        .HasConstraintName("FK__HorarioAs__idGru__6383C8BA");

                    b.Navigation("EspacioNavigation");

                    b.Navigation("IdGrupoNavigation");
                });

            modelBuilder.Entity("AccesoDatos.Models.ProfesorCurso", b =>
                {
                    b.HasOne("AccesoDatos.Models.Curso", "IdCursoNavigation")
                        .WithMany("ProfesorCursos")
                        .HasForeignKey("IdCurso")
                        .IsRequired()
                        .HasConstraintName("FK__ProfesorC__idCur__4F7CD00D");

                    b.HasOne("AccesoDatos.Models.Profesor", "IdProfesorNavigation")
                        .WithMany("ProfesorCursos")
                        .HasForeignKey("IdProfesor")
                        .IsRequired()
                        .HasConstraintName("FK__ProfesorC__idPro__5070F446");

                    b.Navigation("IdCursoNavigation");

                    b.Navigation("IdProfesorNavigation");
                });

            modelBuilder.Entity("AccesoDatos.Models.Curso", b =>
                {
                    b.Navigation("ProfesorCursos");
                });

            modelBuilder.Entity("AccesoDatos.Models.Espacio", b =>
                {
                    b.Navigation("Actividads");
                });

            modelBuilder.Entity("AccesoDatos.Models.Profesor", b =>
                {
                    b.Navigation("Actividads");

                    b.Navigation("ProfesorCursos");
                });
#pragma warning restore 612, 618
        }
    }
}
